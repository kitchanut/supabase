
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."car_brands" (
    "id" bigint NOT NULL,
    "name" "text",
    "img_path" "text",
    "status" character varying,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "note" "text"
);

ALTER TABLE "public"."car_brands" OWNER TO "postgres";

ALTER TABLE "public"."car_brands" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."car_brands_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."car_models" (
    "id" bigint NOT NULL,
    "brand_id" bigint,
    "name" "text",
    "status" character varying,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."car_models" OWNER TO "postgres";

ALTER TABLE "public"."car_models" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."car_models_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."car_sub_models" (
    "id" bigint NOT NULL,
    "model_id" bigint,
    "name" "text",
    "status" character varying,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."car_sub_models" OWNER TO "postgres";

ALTER TABLE "public"."car_sub_models" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."car_sub_models_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."companies" (
    "name" "text",
    "address" "text",
    "tel" "text",
    "tax" "text",
    "author_by" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL
);

ALTER TABLE "public"."companies" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."locations" (
    "id" bigint NOT NULL,
    "name" "text",
    "address" "text",
    "contract" character varying,
    "tel" character varying,
    "status" character varying,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "company_id" "uuid"
);

ALTER TABLE "public"."locations" OWNER TO "postgres";

ALTER TABLE "public"."locations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."locations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."pages" (
    "id" bigint NOT NULL,
    "name" "text",
    "section" "text",
    "status" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."pages" OWNER TO "postgres";

ALTER TABLE "public"."pages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."pages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."permissions" (
    "user_id" "uuid",
    "page_id" bigint,
    "select" boolean,
    "insert" boolean,
    "update" boolean,
    "delete" boolean,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL
);

ALTER TABLE "public"."permissions" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "name" "text",
    "tel" "text",
    "company_id" "uuid",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id" "uuid" NOT NULL,
    "status" "text",
    "email" "text",
    "provider" "text"
);

ALTER TABLE "public"."profiles" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."test" (
    "id" bigint NOT NULL,
    "working_id" character varying,
    "date" timestamp with time zone,
    "no" "text",
    "detail" "text",
    "shop" "text",
    "file" "text",
    "type" smallint,
    "broken" character varying,
    "type_bill" character varying,
    "money" "text",
    "car_id" "text",
    "user_id" "text",
    "status_check" "text",
    "active" "text",
    "branch_id" "text",
    "created_at" timestamp without time zone,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."test" OWNER TO "postgres";

ALTER TABLE "public"."test" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."test_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."car_brands"
    ADD CONSTRAINT "car_brands_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."car_models"
    ADD CONSTRAINT "car_models_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."car_sub_models"
    ADD CONSTRAINT "car_sub_models_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."companies"
    ADD CONSTRAINT "companies_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."locations"
    ADD CONSTRAINT "locations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."pages"
    ADD CONSTRAINT "pages_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."permissions"
    ADD CONSTRAINT "permissions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."test"
    ADD CONSTRAINT "test_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."car_models"
    ADD CONSTRAINT "public_car_models_brand_id_fkey" FOREIGN KEY ("brand_id") REFERENCES "public"."car_brands"("id");

ALTER TABLE ONLY "public"."car_sub_models"
    ADD CONSTRAINT "public_car_sub_models_model_id_fkey" FOREIGN KEY ("model_id") REFERENCES "public"."car_models"("id");

ALTER TABLE ONLY "public"."permissions"
    ADD CONSTRAINT "public_permissions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."profiles"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "public_profiles_company_id_fkey" FOREIGN KEY ("company_id") REFERENCES "public"."companies"("id");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "public_profiles_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id");

CREATE POLICY "Enable All access for authenticated users only" ON "public"."car_brands" USING (true);

CREATE POLICY "Enable All access for authenticated users only" ON "public"."car_models" TO "authenticated" USING (true);

CREATE POLICY "Enable All access for authenticated users only" ON "public"."car_sub_models" TO "authenticated" USING (true);

CREATE POLICY "Enable All access for authenticated users only" ON "public"."locations" TO "authenticated" USING (true);

CREATE POLICY "Enable all access for authenticated users only" ON "public"."companies" TO "authenticated" USING (true);

CREATE POLICY "Enable all access for authenticated users only" ON "public"."pages" TO "authenticated" USING (true);

CREATE POLICY "Enable all access for authenticated users only" ON "public"."permissions" TO "authenticated" USING (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."profiles" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."test" FOR SELECT USING (true);

CREATE POLICY "Enable select for authenticated users only" ON "public"."profiles" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."profiles" FOR UPDATE TO "authenticated" USING (true);

ALTER TABLE "public"."car_brands" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."car_models" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."car_sub_models" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."companies" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."locations" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."pages" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."permissions" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."profiles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."test" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."car_brands" TO "anon";
GRANT ALL ON TABLE "public"."car_brands" TO "authenticated";
GRANT ALL ON TABLE "public"."car_brands" TO "service_role";

GRANT ALL ON SEQUENCE "public"."car_brands_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."car_brands_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."car_brands_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."car_models" TO "anon";
GRANT ALL ON TABLE "public"."car_models" TO "authenticated";
GRANT ALL ON TABLE "public"."car_models" TO "service_role";

GRANT ALL ON SEQUENCE "public"."car_models_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."car_models_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."car_models_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."car_sub_models" TO "anon";
GRANT ALL ON TABLE "public"."car_sub_models" TO "authenticated";
GRANT ALL ON TABLE "public"."car_sub_models" TO "service_role";

GRANT ALL ON SEQUENCE "public"."car_sub_models_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."car_sub_models_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."car_sub_models_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."companies" TO "anon";
GRANT ALL ON TABLE "public"."companies" TO "authenticated";
GRANT ALL ON TABLE "public"."companies" TO "service_role";

GRANT ALL ON TABLE "public"."locations" TO "anon";
GRANT ALL ON TABLE "public"."locations" TO "authenticated";
GRANT ALL ON TABLE "public"."locations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."locations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."locations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."locations_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."pages" TO "anon";
GRANT ALL ON TABLE "public"."pages" TO "authenticated";
GRANT ALL ON TABLE "public"."pages" TO "service_role";

GRANT ALL ON SEQUENCE "public"."pages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."pages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."pages_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."permissions" TO "anon";
GRANT ALL ON TABLE "public"."permissions" TO "authenticated";
GRANT ALL ON TABLE "public"."permissions" TO "service_role";

GRANT ALL ON TABLE "public"."profiles" TO "anon";
GRANT ALL ON TABLE "public"."profiles" TO "authenticated";
GRANT ALL ON TABLE "public"."profiles" TO "service_role";

GRANT ALL ON TABLE "public"."test" TO "anon";
GRANT ALL ON TABLE "public"."test" TO "authenticated";
GRANT ALL ON TABLE "public"."test" TO "service_role";

GRANT ALL ON SEQUENCE "public"."test_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."test_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."test_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
